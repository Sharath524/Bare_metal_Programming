/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stm32f401cc.h>
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void TIM4_IRQHandler()
{
	if((TIM4->SR & (1<<0)))
	{
	    if( (GPIOC->ODR & (1<<13))==0 )
	    {
	      /* Turn ON the LED of PC13 */

	      GPIOC->ODR |= (1<<13);

	      /* Turn OFF the LED of PC13 */
	    }
	    else
	    {
	      /* Turn OFF the LED of PC13 */
	    	   GPIOC->ODR &= ~(1<<13);
	    }
	    TIM4->SR &= ~(1<<0);
	}

}


static void SetSystemClockTo16Mhz(void)
{
  /* Enabling the HSI clock - If not enabled and ready */
  if( (RCC->CR & (1<<1)) == 0)
  {
    RCC->CR |= (1<<0);  /* HSION=1 */

    /* Waiting until HSI clock is ready */
    while( (RCC->CR & (1<<1)) == 0);
  }

  /* Select AHB prescaler to 1 */
  RCC->CFGR &= ~(15<<4);

  /* APB1 prescaler to 1 */
  RCC->CFGR &= ~(7<<10);

  /* APB2 prescaler to 1 */
  RCC->CFGR &= ~(7<<13);

  /* Select the HSI as system clock source */
  RCC->CFGR &= ~(3<<0);


}

/***************************************************************************//**

  \details  This function configures the timer 3 to generate the 1ms delay.

  \return   void

  \retval   none

*******************************************************************************/
static void ConfigureTimer3(void)
{
  /* Enable the APB clock FOR TIM4  */

  RCC->APB1ENR |= (1<<2);
  /* fCK_PSC / (PSC[15:0] + 1)
     (16 MHz / (15999+1)) = 1 KHz timer clock speed */
  /* Tried configuring the prescaler clock with 1MHz not working so switching with 1kHZ clock frequency*/
  TIM4->TIM_PSC  = 15999;

  /* (1 KHz / 1000) = 1Hz = 1s */
  /* So, this will generate the 1s delay */
  TIM4->TIM_ARR = 999;

  /* Finally enable TIM4 module */
  TIM4->TIM_CR1 = (1<<0);

  NVIC->ISER[30>>5] |= (1<<(30%32))

}

int main(void)
{

  /* Set System clock to 16 MHz using HSI */
  SetSystemClockTo16Mhz();

  /* Configure the Timer 3 */
  ConfigureTimer3();

  /* Enable the AHB clock all GPIO port C */
  RCC->AHB1ENR |= (1<<2);
  /* set all Port C as output */
  GPIOC->MODER |= (1<<26);

  /* Endless loop */

}
