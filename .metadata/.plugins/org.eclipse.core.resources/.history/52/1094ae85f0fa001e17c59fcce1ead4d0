/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stm32f401cc.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
    /* Loop forever */
	  /* Enable the AHB clock all GPIO port C */
	  RCC->AHB1ENR |= (1<<2);
	  /* set  Port C 14 pin as input mode */
	  GPIOC->MODER &= ~(3<<28);
	  /* set  Port C 13 pin as output mode */
	  GPIOC->MODER |= (1<<26);
	  /* clearing the 14 pin PUPDR register */
	  GPIOC->PUPDR &= ~(3<<28);
	  /* set Port C 14th as PULLUP mode */
	  GPIOC->PUPDR |= (1<<28);

	  uint8_t data =0;

		while(1)
		{
			   if((GPIOC->IDR & (1<<14))== 0)
			   {
				   data =0;
				   GPIOC->ODR |= (1<<13);
			   }
			   else {
				   data = 1;
				   GPIOC->ODR &= ~(1<<13);
			   }
		}

}

/* 						NOTE
 *
 * Here the Controller wants to continously check the button status
 *
 * That can be solved using external interrupt
 *
 * when the button pressed the function will be executed
 *
 * */
